# -*- coding: utf-8 -*-
"""
Created on Mon Mar 13 20:38:57 2023

@author: bv_ge
"""
#Entrada: Gráfica ponderada conexa con vertices 1,....,n y vertices
#         w(i,j) es igual al peso de (i,j); 
#         Si (i,j) no es  una arista,
#         w(i,j) es igual a 7 (un valor mayor que cualquier peso real).
#Salida: conjunto de aristas de E en un árbol de espansión mínima(aem).

import cv2

img1=cv2.imread(r"grafo.jpg",1)
img2=cv2.imread(r"solucion.jpg",1)
img3=cv2.imread(r"algprim.jpg",1)

img1 = cv2.resize(img1, (400,400))
img2 = cv2.resize(img2, (400,400))
img3 = cv2.resize(img3, (500,600))

cv2.imshow('GRAFO',img1)
cv2.imshow('SOLUCION',img2)
cv2.imshow('EXAMEN',img3)

def prim(w,n,s):           #w: matriz con los pesos; n: número de vetices; s: vetice inicial                            
    v=[]                    #v mi lista 
    while(len(v) != n):     
        v.append(0)         #inicializamos en 0
    v[s] = 1                #iniciamos en 1 
    E = []                  #Conjunto de aristas
    for i in range (0,n-1):
        min = 7
        agregar_vertice = 0
        e = []
        for j in range (0,n):
            if(v[j] == 1):
                for k in range (0,n):
                    if(v[k]==0 and w[j][k] < min):
                        agregar_vertice = k
                        r=j+1
                        p=k+1
                        e = [r,p]
                        min = w[j][k]              
        v[agregar_vertice] = 1
        E.append(e)
    return [E]

n=6
s=0
w=[#1,2,3,4,5,6      #7 ==no existe arista que conecte esos vertices
   [7,4,2,7,3,7],#1
   [4,7,7,5,7,7],#2
   [2,7,7,1,6,3],#3
   [7,5,1,7,7,6],#4
   [3,7,7,7,7,2],#5
   [7,7,3,6,2,7] #6
   ]
        

print(prim(w, n, s))

cv2.waitKey(0)
cv2.destroyAllWindows()
